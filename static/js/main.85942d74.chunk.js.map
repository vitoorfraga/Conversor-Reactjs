{"version":3,"sources":["logo.svg","components/Conversor.js","App.js","reportWebVitals.js","index.js"],"names":["Conversor","props","state","moedaA_valor","moedaB_valor","converter","bind","de_para","this","moedaA","moedaB","url","fetch","then","res","json","cotacao","parseFloat","toFixed","setState","className","type","onChange","event","target","value","onClick","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,I,uDCGMA,E,kDAEnB,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAEDC,MAAQ,CACXC,aAAc,GACdC,aAAc,GAEhB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBAPD,E,6CAUlB,WAAY,IAAD,OACLC,EAAO,UAAMC,KAAKP,MAAMQ,OAAjB,YAA2BD,KAAKP,MAAMS,QAC7CC,EAAG,qDAAiDJ,EAAjD,8CAEPK,MAAMD,GAAKE,MAAK,SAAAC,GACd,OAAOA,EAAIC,UAEZF,MAAK,SAAAE,GACJ,IAAIC,EAAUD,EAAKR,GACfH,GAAgBa,WAAY,EAAKf,MAAMC,cAAea,GAASE,QAAQ,GAC3E,EAAKC,SAAS,CAACf,sB,oBAInB,WAAU,IAAD,OACP,OACE,sBAAKgB,UAAU,YAAf,UACE,+BAAKZ,KAAKP,MAAMQ,OAAhB,SAA8BD,KAAKP,MAAMS,UACzC,uBAAOW,KAAK,OAAOC,SAAU,SAACC,GAAS,EAAKJ,SAAS,CAAChB,aAAaoB,EAAMC,OAAOC,WAChF,wBAAQJ,KAAK,SAASI,MAAM,YAAYC,QAASlB,KAAKH,UAAtD,uBACA,kDACA,6BAAKG,KAAKN,MAAME,sB,GAjCeuB,aCYxBC,MATf,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,cAAC,EAAD,CAAWX,OAAO,MAAMC,OAAO,QAC/B,cAAC,EAAD,CAAWD,OAAO,MAAMC,OAAO,YCEtBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.85942d74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport'./Conversor.css'\r\n\r\nexport default class Conversor extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      moedaA_valor: \"\",\r\n      moedaB_valor: 0,\r\n    }\r\n    this.converter = this.converter.bind(this);\r\n  }\r\n\r\n  converter(){\r\n    let de_para = `${this.props.moedaA}_${this.props.moedaB}`\r\n    let url = `https://free.currconv.com/api/v7/convert?q=${de_para}&compact=ultra&apiKey=cbe998448b8c1346e1a7`\r\n\r\n    fetch(url).then(res=>{\r\n      return res.json()\r\n    })\r\n    .then(json=>{\r\n      let cotacao = json[de_para];\r\n      let moedaB_valor = (parseFloat (this.state.moedaA_valor)* cotacao).toFixed(2) \r\n      this.setState({moedaB_valor})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"conversor\">\r\n        <h2>{this.props.moedaA} para {this.props.moedaB}</h2>\r\n        <input type='text' onChange={(event)=>{this.setState({moedaA_valor:event.target.value})}}></input>\r\n        <button type='button' value='converter' onClick={this.converter}>Converter</button>\r\n        <h2>Valor convertido</h2>\r\n        <h2>{this.state.moedaB_valor}</h2>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Conversor from './components/Conversor'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Conversor moedaA=\"USD\" moedaB=\"BRL\"></Conversor> \n      <Conversor moedaA=\"BRL\" moedaB=\"USD\"></Conversor> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}